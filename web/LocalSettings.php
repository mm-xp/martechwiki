<?php
# This file was automatically generated by the MediaWiki 1.34.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

// require_once("$IP/extensions/Markdown/Markdown.php");

// wfLoadExtension( 'VisualEditor' );
//
// // Enable by default for everybody
// $wgDefaultUserOptions['visualeditor-enable'] = 1;
//
// // Optional: Set VisualEditor as the default for anonymous users
// // otherwise they will have to switch to VE
// // $wgDefaultUserOptions['visualeditor-editor'] = "visualeditor";
//
// // Don't allow users to disable it
// $wgHiddenPrefs[] = 'visualeditor-enable';
//
// // OPTIONAL: Enable VisualEditor's experimental code features
// #$wgDefaultUserOptions['visualeditor-enable-experimental'] = 1;
//
// ## Uncomment this to disable output compression
// # $wgDisableOutputCompression = true;

require_once "$IP/extensions/SlackNotifications/SlackNotifications.php";
// Required. Your Slack incoming webhook URL. Read more from here: https://api.slack.com/incoming-webhooks
$wgSlackIncomingWebhookUrl = "https://hooks.slack.com/services/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";
// Required. Name the message will appear be sent from.
$wgSlackFromName = "Wiki";
// URL into your MediaWiki installation with the trailing /.
$wgWikiUrl= "http://master-7rqtwti-dyhnfo3jnfw6e.us-2.platformsh.site/";
// Wiki script name. Leave this to default one if you do not have URL rewriting enabled.
$wgWikiUrlEnding = "index.php?title=";
// What method will be used to send the data to Slack server. By default this is "curl" which only works if you have the curl extension enabled. This can be: "curl" or "file_get_contents". Default: "curl".
$wgSlackSendMethod = "curl";

$wgSitename = "Madden Media Wiki";
$wgMetaNamespace = "Madden_Media_Wiki";

// Define constants for my additional namespaces.
define("NS_MARTECH", 3000); // This MUST be even.
define("NS_MARTECH_TALK", 3001); // This MUST be the following odd integer.

// Add namespaces.
$wgExtraNamespaces[NS_MARTECH] = "MarTech";
$wgExtraNamespaces[NS_MARTECH_TALK] = "MarTech_talk"; // Note underscores in the namespace name.

define("NS_CONTENT", 3002); // This MUST be even.
define("NS_CONTENT_TALK", 3003); // This MUST be the following odd integer.

// Add namespaces.
$wgExtraNamespaces[NS_CONTENT] = "Content";
$wgExtraNamespaces[NS_CONTENT_TALK] = "Content_talk"; // Note underscores in the namespace name.

define("NS_CREATIVE", 3004); // This MUST be even.
define("NS_CREATIVE_TALK", 3005); // This MUST be the following odd integer.

// Add namespaces.
$wgExtraNamespaces[NS_CREATIVE] = "Creative";
$wgExtraNamespaces[NS_CREATIVE_TALK] = "Creative_talk"; // Note underscores in the namespace name.

define("NS_DESIGN", 3006); // This MUST be even.
define("NS_DESIGN_TALK", 3007); // This MUST be the following odd integer.

// Add namespaces.
$wgExtraNamespaces[NS_DESIGN] = "Design";
$wgExtraNamespaces[NS_DESIGN_TALK] = "Design_talk"; // Note underscores in the namespace name.

define("NS_DMS", 3008); // This MUST be even.
define("NS_DMS_TALK", 3009); // This MUST be the following odd integer.

// Add namespaces.
$wgExtraNamespaces[NS_DMS] = "DMS";
$wgExtraNamespaces[NS_DMS_TALK] = "DMS_talk"; // Note underscores in the namespace name.

define("NS_SEO", 3010); // This MUST be even.
define("NS_SEO_TALK", 3011); // This MUST be the following odd integer.

// Add namespaces.
$wgExtraNamespaces[NS_SEO] = "SEO";
$wgExtraNamespaces[NS_SEO_TALK] = "SEO_talk"; // Note underscores in the namespace name.

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://master-7rqtwti-dyhnfo3jnfw6e.us-2.platformsh.site";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgResourceBasePath/resources/assets/logo.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "xpollard@maddenmedia.com";
$wgPasswordSender = "xpollard@maddenmedia.com";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "database.internal";
$wgDBname = "main";
$wgDBuser = "main";
$wgDBpassword = "";

# MySQL specific settings
$wgDBprefix = "mm_";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "4584f84ef621e16de5802e03ef3ef2a01e0c9603b3ec15a0a0bf74cf5238aa9c";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "b5d143ddde9e51d3";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# External Link Targets
$wgExternalLinkTarget = '_blank';

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'LocalisationUpdate' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TitleBlacklist' );
wfLoadExtension( 'WikiEditor' );


# End of automatically generated settings.
# Add more configuration options below.

